<?php

/**
 * @file
 * Installation file for i18n_taxonomy module.
 */

/**
 * Set extra field on term table, set config for vocabularies.
 *
 * @todo Column 'language' is obsolete as Backdrop ships with 'langcode'.
 */
function i18n_taxonomy_install() {
  module_load_install('i18n');
  i18n_install_create_fields('taxonomy_term_data', array('language', 'i18n_tsid'));
  // Set module weight for it to run after core modules, but before views.
  db_query("UPDATE {system} SET weight = 5 WHERE name = 'i18n_taxonomy' AND type = 'module'");
  // Add two lines of i18n settings to taxonomy config.
  $names = config_get_names_with_prefix('taxonomy.vocabulary');
  foreach ($names as $name) {
    $config = config("taxonomy.vocabulary.{$name}");
    $data = $config->get();
    if (isset($data['language']) && $data['language'] == TAXONOMY_LANGUAGE_ENABLED) {
      // But only if multilingual support is enabled.
      $data['i18n_mode'] = I18N_MODE_NONE;
      $data['langcode'] = LANGAGE_NONE;
      $config->save($data);
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function i18n_taxonomy_uninstall() {
  db_drop_field('taxonomy_term_data', 'language');
  db_drop_field('taxonomy_term_data', 'i18n_tsid');
  $names = config_get_names_with_prefix('taxonomy.vocabulary');
  foreach ($names as $name) {
    $config = config($name);
    $data = $config->get();
    unset($data['i18n_mode']);
    unset($data['langcode']);
    $config->save($data);
  }
}

/**
 * Implements hook_schema_alter().
 */
function i18n_taxonomy_schema_alter(&$schema) {
  $schema['taxonomy_term_data']['fields']['language'] = array(
    'type' => 'varchar',
    'length' => 12,
    'not null' => TRUE,
    'default' => LANGUAGE_NONE,
  );
  $schema['taxonomy_term_data']['fields']['i18n_tsid'] = array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );
}

/**
 * Implements hook_disable().
 */
function i18n_taxonomy_disable() {
  foreach (field_info_fields() as $fieldname => $field) {
    if ($field['type'] == 'taxonomy_term_reference' && $field['settings']['options_list_callback'] == 'i18n_taxonomy_allowed_values') {
      $field['settings']['options_list_callback'] = NULL;
      field_update_field($field);
    }
  }
}

/**
 * Implements hook_update_last_removed().
 */
function i18n_taxonomy_update_last_removed() {
  return 7004;
}
