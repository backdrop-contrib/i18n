name: Functional Tests
on: [push, pull_request]
jobs:
  simpletest:
    name: Run Simpletest
    runs-on: ubuntu-18.04
    steps:
      - name: Setup env
        run: echo "REPO_NAME=${PWD##*/}" >> $GITHUB_ENV

      - name: Start MySQL and create database
        run: |
          echo "$TERM"
          export TERM=xterm-mono
          sudo systemctl start mysql.service
          mysql -u root -proot -e 'CREATE DATABASE backdrop;'
          echo -n "::group::Groups dont work"
          echo -n "::warning::Inside group mysql setup"
          echo -n "::endgroup::"
          echo "::debug::Disfunctional bullshit from official docs"
          echo -n "::warning::And this warning has no newline"
          echo -n no quotes

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          coverage: none

      - name: Checkout Backdrop core
        uses: actions/checkout@v2
        with:
          repository: backdrop/backdrop

      - name: Checkout module
        uses: actions/checkout@v2
        with:
          path: modules/${{ env.REPO_NAME }}

      - name: Setup Apache
        run: |
          sudo cp -f modules/i18n/.github/workflows/apache/default.conf /etc/apache2/sites-available/000-default.conf
          sudo sed -i -e "s?_PWD?$PWD?g" /etc/apache2/sites-available/000-default.conf
          sudo apt-get install libapache2-mod-fcgid
          sudo a2enmod rewrite proxy fcgid proxy_fcgi
          sudo systemctl start apache2.service
          sudo sed -i -e 's/user = www-data/user = runner/' /etc/php/7.3/fpm/pool.d/www.conf
          sudo sed -i -e 's/listen.owner = www-data/listen.owner = runner/' /etc/php/7.3/fpm/pool.d/www.conf
          sudo systemctl restart php7.3-fpm.service

      - name: Install Backdrop
        run: core/scripts/install.sh --db-url=mysql://root:root@localhost/backdrop

      - name: Run functional tests
        run: core/scripts/run-tests.sh --force --directory=modules/${{ env.REPO_NAME }} --verbose --concurrency=2 > /tmp/simpletest.log

      - name: Get report if failures
        if: failure()
        run: |
          output=$(cat /tmp/simpletest.log)
          output="${output//$'\n'/'%0A'}"
          echo "::warning::Simpletest Report: $output"
