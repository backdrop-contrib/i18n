<?php

/**
 * @file
 * Installation file for Internationalization (i18n) module.
 */

/**
 * Implements hook_install().
 */
function i18n_install() {
  // Set module weight for it to run after core modules.
  db_query("UPDATE {system} SET weight = 10 WHERE name = 'i18n' AND type = 'module'");
}

/**
 * Add fields to the schema if they don't exist.
 *
 * @param string $table
 *   The name of the database table.
 * @param array $fields
 *   The list of database fields to create.
 * @param bool $force_rebuild_schema
 *   Whether to force backdrop_get_schema() to rebuild the schema. This may be
 *   necessary when additional implementations of hook_schema_alter() have
 *   become available since the schema was originally built.
 */
function i18n_install_create_fields($table, $fields, $force_rebuild_schema = FALSE) {
  static $schema;
  $rebuild_schema = !isset($schema) || $force_rebuild_schema;
  $schema = backdrop_get_schema($table, $rebuild_schema);
  foreach ($fields as $field) {
    if (!empty($schema['fields'][$field])) {
      if (!db_field_exists($table, $field)) {
        db_add_field($table, $field, $schema['fields'][$field]);
      }
      else {
        // The field exists, make sure field definition is up to date.
        db_change_field($table, $field, $field, $schema['fields'][$field]);
      }
    }
  }
}

/**
 * Implements hook_update_last_removed().
 */
function i18n_update_last_removed() {
  return 7001;
}

/**
 * Move book settings from variables to config.
 */
function i18n_update_1000() {
  // Migrate variables to config.
  // $config = config('i18n.settings');
  // $config->set('book_allowed_types', update_variable_get('book_allowed_types', array('book')));
  // $config->save();
  // Delete variables.
  // update_variable_del('book_allowed_types');.
}

/**
 * Disable deprecated sub-modules: i18n_user, i18n_variable, i18n_block.
 */
function i18n_update_1001() {
  db_delete('system')
    ->condition('name', array('i18n_user', 'i18n_variable', 'i18n_block'), 'IN')
    ->execute();
}
