<?php

/**
 * @file
 * Test case for multilingual menus.
 */

require_once __DIR__ . '/../../tests/i18n.test';
/**
 * Test class for i18n_path.
 */
class i18nPathTestCase extends Backdropi18nTestCase {

  /**
   * Set up.
   */
  public function setUp() {
    parent::setUp('translation', 'i18n_path');
    parent::setUpLanguages(array('administer site configuration'));
  }

  /**
   * Check translation link.
   */
  public function checkTranslationLink($path, $language, $method = 'assertRaw') {
    $this->{$method}($path, t('Found translation link. :language - :path', array(':language' => $language, ':path' => $path)));
  }

  /**
   * Check path translation.
   */
  public function testPathTranslation() {
    $this->setUpContentType(array('type' => 'page', 'mode' => TRANSLATION_ENABLED));

    // Create 2 nodes in different languages.
    $first_title = $this->randomName(10);
    $first_body = $this->randomString(50);
    $first_node = $this->createNode('page', $first_title, $first_body, $this->default_language);

    $secondary_title = $this->randomName(10);
    $secondary_body = $this->randomString(50);
    $secondary_node = $this->createNode('page', $secondary_title, $secondary_body, $this->secondary_language);

    $this->backdropGet('node/' . $first_node->nid);
    $this->checkTranslationLink('node/' . $first_node->nid, $first_node->langcode);
    $this->checkTranslationLink($this->secondary_language . '/node/' . $first_node->nid, $this->secondary_language, 'assertNoRaw');

    $this->backdropGet('node/' . $secondary_node->nid);
    $this->checkTranslationLink('node/' . $secondary_node->nid, $secondary_node->langcode);
    $this->checkTranslationLink($this->secondary_language . '/node/' . $secondary_node->nid, $this->secondary_language);

    $this->backdropGet('admin/config/regional/i18n_translation/path');
    $this->clickLink(t('Add path translation'));

    // Create new translation set with two node links.
    $edit = array(
      'title' => $this->randomName(10),
      'translations[' . $this->default_language . ']' => 'node/' . $first_node->nid,
      'translations[' . $this->secondary_language . ']' => 'node/' . $secondary_node->nid,
    );
    $this->backdropPost('admin/config/regional/i18n_translation/path/add', $edit, t('Save'));

    $this->backdropGet('node/' . $first_node->nid);
    $this->checkTranslationLink('node/' . $first_node->nid, $first_node->langcode);
    $this->checkTranslationLink($this->secondary_language . '/node/' . $secondary_node->nid, $this->secondary_language);

    $this->backdropGet('node/' . $secondary_node->nid);
    $this->checkTranslationLink('node/' . $first_node->nid, $first_node->langcode);
    $this->checkTranslationLink('node/' . $secondary_node->nid, $this->secondary_language);

    // Create new translation set with one node and one menu "token".
    $edit = array(
      'translations[' . $this->default_language . ']' => 'node/' . $first_node->nid,
      'translations[' . $this->secondary_language . ']' => '<front>',
    );
    $this->backdropPost('admin/config/regional/i18n_translation/path/edit/1', $edit, t('Save'));

    $this->backdropGet('node/' . $first_node->nid);
    $this->checkTranslationLink('node/' . $first_node->nid, $first_node->langcode);
    $this->checkTranslationLink('node/' . $secondary_node->nid, $this->secondary_language, 'assertNoLinkByHref');
    $this->checkTranslationLink($this->secondary_language, $this->secondary_language);

    // Create new translation set with one node and an external menu link.
    $url = 'http://' . $this->randomName(10) . '.' . $this->randomName(2);
    $edit = array(
      'translations[' . $this->default_language . ']' => 'node/' . $first_node->nid,
      'translations[' . $this->secondary_language . ']' => $url,
    );
    $this->backdropPost('admin/config/regional/i18n_translation/path/edit/1', $edit, t('Save'));

    $this->backdropGet('node/' . $first_node->nid);
    $this->checkTranslationLink('node/' . $first_node->nid, $first_node->langcode);
    $this->checkTranslationLink($url, $this->secondary_language);
  }

}
