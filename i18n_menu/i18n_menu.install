<?php

/**
 * @file
 * Installation file for i18nmenu module.
 */

/**
 * Implements hook_install().
 */
function i18n_menu_install() {
  // Set module weight for it to run after core modules, but before views.
  db_query("UPDATE {system} SET weight = 5 WHERE name = 'i18n_menu' AND type = 'module'");
  module_load_install('i18n');
  i18n_install_create_fields('menu_links', array('language', 'i18n_tsid'));
  i18n_menu_update_menu_data();
}

/**
 * Implements hook_uninstall().
 */
function i18n_menu_uninstall() {
  if (db_field_exists('menu_links', 'i18n_tsid')) {
    db_drop_field('menu_links', 'i18n_tsid');
  }
  $menus = config_get_names_with_prefix('menu.menu.');
  foreach ($menus as $menu) {
    $config = config($menu);
    $data = $config->get();
    unset($data['language']);
    unset($data['i18n_mode']);
    $config->setData($data);
    $config->save();
  }
}

/**
 * Implements hook_schema_alter().
 */
function i18n_menu_schema_alter(&$schema) {
  $schema['menu_links']['fields']['i18n_tsid'] = array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );
}


/**
 * Implements hook_update_dependencies().
 */
function i18n_menu_update_dependencies() {
  $dependencies['i18n_menu'][1000] = array(
    'system' => 1064,
  );
  $dependencies['system'][1065] = array(
    'i18n_menu' => 1000,
  );
  return $dependencies;
}

/**
 * Implements hook_update_last_removed().
 */
function i18n_menu_update_last_removed() {
  return 7001;
}

/**
 * Finalize switch from language column to langcode.
 */
function i18n_menu_update_1000() {
  if (!db_field_exists('menu_links', 'language')) {
    return;
  }
  // @see i18n_menu_update_dependencies().
  db_query('UPDATE {menu_links} SET `langcode` = `language`');
  db_drop_field('menu_links', 'language');
}
